name: üöÄ Deploy to AWS Lambda Container

on:
  push:
    branches: [sec_office_pc]  # ÎòêÎäî main

env:
  REGION: ap-northeast-2
  FUNCTION_NAME: parkingauto_250707
  IMAGE_NAME: parking_auto_ecrrepo_2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üîê Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: üîì Login to Amazon ECR
      run: |
        ECR_URL="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}"
        aws ecr get-login-password --region ${{ env.REGION }} | docker login --username AWS --password-stdin $ECR_URL

    - name: üõ† Build Docker image and tag
      run: |
        ECR_URL="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}"
        docker build -t ${{ env.IMAGE_NAME }}:latest .
        docker tag ${{ env.IMAGE_NAME }}:latest $ECR_URL:latest

    - name: üì§ Push to Amazon ECR
      run: |
        ECR_URL="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}"
        docker push $ECR_URL:latest

    - name: üîÑ Update Lambda function
      run: |
        ECR_URL="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}"
        aws lambda update-function-code \
          --function-name ${{ env.FUNCTION_NAME }} \
          --image-uri $ECR_URL:latest \
          --region ${{ env.REGION }}
